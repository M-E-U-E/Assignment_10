version: "3.9"

services:
  db:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_DB: hotel_db
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U username -d hotel_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  django_app:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: 
      - .env
    container_name: django_app
    depends_on:
      db:
        condition: service_healthy
    environment:
      SERVICE: django
      POSTGRES_DB: hotel_db
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      ALLOWED_HOSTS: 127.0.0.1,localhost,django_app
    ports:
      - "8000:8000"
    volumes:
      - ./llm:/usr/src/app
    networks:
      - app_network

  scrapy_app:
    build:
      context: .
    container_name: scrapy_app
    depends_on:
      db:
        condition: service_healthy
    environment:
      SERVICE: scrapy
      DATABASE_URL: postgresql+psycopg2://username:password@db:5432/hotel_db
    volumes:
      - ./scraper:/usr/src/scraper
    working_dir: /usr/src/scraper
    command: scrapy crawl async_trip
    networks:
      - app_network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    restart: unless-stopped
    networks:
      - app_network

volumes:
  postgres_data:
  pgadmin_data:

networks:
  app_network:
    driver: bridge
